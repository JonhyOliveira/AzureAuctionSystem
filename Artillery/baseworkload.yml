config:
  target: 'https://scc-backend-58001-52949-57797.azurewebsites.net/rest'
  http:
    timeout: 10
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "test-utils.js"
  phases:
    - name: "Warm up"
      arrivalRate: 1
      duration: 30
    - name: "Test"
      arrivalRate: 5
      duration: 60

scenarios:
  - name: "Bidder searches for auctions to bid on"
    weight: 0
    flow:
      - function: "selectUserSkewed"    # Select a random user
      - post:                           # First: login as a user
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            nickname: "{{ user }}"
            pwd: "{{ pwd }}"
      - loop:                         # Then: do a random number of searches
        - function: "genQueryTerm"    # 1. generate a random search term
        - get:                        # 2. get the results of the search
            name: "GET:/auction?query=*"
            url: "/auction?query=\"{{ query }}\""
            capture:
              - json: $
                as: "auctionsLst"
        - loop:                       # 3. loop through the results
            - get:                    # 3.1 load the image
                url: "/media/{{ $loopElement.image_id }}"
                name: "GET:/media/*"
                headers:
                  Accept: application/octet-stream
            - get:                    # 3.2 load the highest bid
                url: "/auction/{{ $loopElement.id }}/bid/highest"
                name: "GET:/auction/*/bid/highest"
                headers:
                  Accept: application/json
                afterResponse: "decideOnBid" # 3.3 decide on whether or not to execute a bid
            - think: random(3)
            - post:
                url: "/auction/{{ $loopElement.id }}/bid"
                name: "POST:/auction/*/bid"
                headers:
                  Content-Type: application/json
                  Accept: application/json
                json:
                  bidder: "{{ user }}"
                  amount: "{{ value }}"
                ifTrue: "value"
          over: "auctionsLst"         # go back to 3.
        whileTrue: "random50"         # go back to 1.

  - name: "Users responds to questions"
    weight: 5
    flow:
      - function: "selectUserSkewed"    # Select a random user
      - post: # First: login as a user
          url: "/user/auth"
          name: "POST:/user/auth"
          headers:
            Content-Type: application/json
          json:
            nickname: "{{ user }}"
            pwd: "{{ pwd }}"
      - get: # 2. get user auctions
          name: "GET:/user/*/auctions"
          url: "/user/{{ user }}/auctions"
          capture:
            - json: $
              as: "auctionsLst"
      - function: "chooseAuctions"
      - loop:
        - function: "saveLoopElementAsAuction"
        - get:
            url: "/media/{{ auction.image_id }}"
            name: "GET:/media/*"
            headers:
              Accept: application/octet-stream
        - get:
            url: "/auction/{{ auction.id }}/question"
            name: "GET:/auctions/*/question"
            headers:
              Accept: application/json
            afterResponse: "decideOnQuestions"
        - loop:
            - function: "genNewQuestion"
            - put:
                url: "/auction/{{ auction.id }}/question"
                name: "PUT:/auctions/*/question"
                headers:
                  Accept: application/json
                json:
                  question_id: "{{ $loopElement }}"
                  answer: "{{ text }}"
          over: "responses"
        over: "auctionsLst"