apiVersion: apps/v1
kind: Deployment
metadata:
    name: web-app
spec:
    replicas: 1 # start with a single replica
    selector:
        matchLabels:
            app: web-app
    template:
        metadata:
            labels:
                app: web-app
        spec:
            nodeSelector:
                "kubernetes.io/os": linux
            containers:
                - name: web-app
                  image: jfvoliveira2001/scc2022-backend:v3
                  ports:
                      - containerPort: 8080
                        name: http
                  env:
                      - name: REDIS_HOSTNAME
                        value: redis
                      - name: REDIS_PORT
                        value: "6379"
                      - name: DB_CONNSTRING
                        value: "mongodb://root:root@mongo:27017/"
                      - name: DB_NAME
                        value: scc2022-project-db
                      - name: BLOBSTORE_CONNSTRING
                        value: /var/blobstore
                  volumeMounts:
                      - mountPath: /var/blobstore
                        name: blob-store-volume
                  resources:
                      requests:
                          cpu: 1000m
                          memory: 1000Mi
                      limits:
                          cpu: 2000m
                          memory: 2000Mi
            initContainers: # waits for necessary services to be available
                - name: wait-redis
                  image: busybox:1.28
                  command: [ 'sh', '-c', "until nslookup redis; do sleep 2; done;" ]
                - name: wait-mongo
                  image: busybox:1.28
                  command: [ 'sh', '-c', "until nslookup redis; do sleep 2; done;" ]
            volumes:
                - name: blob-store-volume
                  persistentVolumeClaim:
                      claimName: image-store
---
apiVersion: v1
kind: Service
metadata:
    name: web-app
spec:
    type: LoadBalancer # expose service
    selector:
        app: web-app
    ports:
        - protocol: TCP
          name: http
          targetPort: 8080
          port: 80
---
# scales number of pods automatically
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
    name: web-app
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: web-app
    minReplicas: 1
    maxReplicas: 5
    metrics: # average resource targets
        - type: Resource
          resource:
              name: cpu
              target:
                  type: Utilization
                  averageUtilization: 50
        - type: Resource
          resource:
              name: memory
              target:
                  type: Utilization
                  averageUtilization: 50